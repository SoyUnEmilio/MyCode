<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" x:Name="userControl"
	mc:Ignorable="d"
	xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
	xmlns:ViewModels="clr-namespace:Microsoft.Samples.NLayerApp.Presentation.Windows.WPF.Client.ViewModels"
    xmlns:Converters="clr-namespace:Microsoft.Samples.NLayerApp.Presentation.Windows.WPF.Client.Converters"
    xmlns:ValidationRules="clr-namespace:Microsoft.Samples.NLayerApp.Presentation.Windows.WPF.Client.ValidationRules"
	x:Class="Microsoft.Samples.NLayerApp.Presentation.Windows.WPF.Client.EditCustomerView"
	d:DesignWidth="673" d:DesignHeight="493" RenderTransformOrigin="0.5,0.5" Opacity="1">

    <UserControl.Resources>

        <Style x:Key="CustomerprofileExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>
                                <ContentPresenter x:Name="ExpandSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColumnSeriesStyle1" TargetType="{x:Type chartingToolkit:ColumnSeries}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type chartingToolkit:ColumnSeries}">
                        <Canvas x:Name="PlotArea"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="FadeIn">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,1,1" KeyTime="0" Value="0.6"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.1" KeySpline="0,0,0.5,1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0.5,0,0.5,1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,1,1" KeyTime="0" Value="0.6"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.1" KeySpline="0,0,0.5,1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0.5,0,0.5,1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,1,1" KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" KeySpline="0,0,0.5,1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOut">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.1000000" Value="1.1"/>
                <SplineDoubleKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.4000000" Value="0.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.1000000" Value="1.1"/>
                <SplineDoubleKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.4000000" Value="0.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeySpline="0.5,0,1,1" KeyTime="00:00:00.1000000" Value="1"/>
                <SplineDoubleKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
            <BeginStoryboard x:Name="FadeOut_BeginStoryboard" Storyboard="{StaticResource FadeOut}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform ScaleX="1" ScaleY="1"/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <UserControl.DataContext>
        <ViewModels:VMEditCustomer/>
    </UserControl.DataContext>
    <Border x:Name="border" BorderThickness="1,1,1,1" BorderBrush="#CC000000" RenderTransformOrigin="0.5,0.5">
        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Border.RenderTransform>
        <Border x:Name="border1" BorderBrush="#19FFFFFF" BorderThickness="1,1,0,0">
            <Grid x:Name="MainGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="61"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <RadialGradientBrush GradientOrigin="0.915,1.183" Center="0.924,1.155" RadiusY="1.501" RadiusX="0.741">
                        <GradientStop Color="#FF000000" Offset="0"/>
                        <GradientStop Color="#BF000000" Offset="1"/>
                    </RadialGradientBrush>
                </Grid.Background>
                <Border BorderBrush="#FF90D11F" BorderThickness="0,1,0,0" Margin="0" Background="{DynamicResource WindowTitleBackgroundGradient}" RenderTransformOrigin="0.5,0.5">
            		<Border.RenderTransform>
            			<TransformGroup>
            				<ScaleTransform ScaleY="-1"/>
            				<SkewTransform/>
            				<RotateTransform/>
            				<TranslateTransform/>
            			</TransformGroup>
            		</Border.RenderTransform>
            	</Border>
                <TextBlock x:Name="TB_CustomerName" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Customer Name" TextWrapping="Wrap" Foreground="White" FontFamily="{DynamicResource SystemFont}" Margin="15,0,0,0" FontSize="26.667" d:LayoutOverrides="HorizontalAlignment"/>
                <Grid Margin="0" Grid.Row="1">
                    <Grid Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.344*"/>
                            <RowDefinition Height="0.527*"/>
                            <RowDefinition Height="0.129*"/>
                        </Grid.RowDefinitions>
                        <StackPanel VerticalAlignment="Center" Orientation="Vertical" Grid.Row="1" Margin="15,0,0,0">
                            <Grid Height="21.96" Margin="0,0,15,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="Company Name" TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0"/>
                                <TextBox x:Name="TB_CompanyName" Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Grid.Column="1" Style="{DynamicResource TextBoxStyle1}">
                                    <Binding Path="Customer.CompanyName" Mode="TwoWay" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" ValidatesOnExceptions="True">
                                		<Binding.ValidationRules>
                                			<ValidationRules:RequiredValidationRule />
                                		</Binding.ValidationRules>
                                	</Binding>
                                </TextBox>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="Contact Name" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <TextBox x:Name="TB_ContactName" Margin="0" Style="{DynamicResource TextBoxStyle1}" Grid.Column="1" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Text="{Binding Customer.ContactName}"/>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="Address" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <TextBox x:Name="TB_Address" Margin="0" Style="{DynamicResource TextBoxStyle1}" Grid.Column="1" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Text="{Binding Customer.Address.Address}"/>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#CCFFFFFF" Text="Country" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <ComboBox d:LayoutOverrides="Height" Grid.Column="1" ItemsSource="{Binding Countries, Mode=OneWay}" SelectedValue="{Binding Customer.CountryId, Mode=TwoWay}" SelectedValuePath="CountryId" DisplayMemberPath="CountryName"/>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="City" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <TextBox x:Name="TB_City" Margin="0" Style="{DynamicResource TextBoxStyle1}" Grid.Column="1" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Text="{Binding Customer.Address.City}"/>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="Zip" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <TextBox x:Name="TB_Zip" Margin="0" Style="{DynamicResource TextBoxStyle1}" Grid.Column="1" TextWrapping="Wrap" d:LayoutOverrides="Width, Height">
                                	<Binding Path="Customer.Address.PostalCode" Mode="TwoWay" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" ValidatesOnExceptions="True">
                                		<Binding.ValidationRules>
                                			<ValidationRules:PositiveIntValidationRule />
                                		</Binding.ValidationRules>
                                	</Binding>
                                </TextBox>
                            </Grid>
                            <Grid Margin="0,12,15,0" Height="21.96">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.277*"/>
                                    <ColumnDefinition Width="0.723*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{DynamicResource SystemFont}" FontSize="18.667" Foreground="#99FFFFFF" Text="Telephone" TextWrapping="Wrap" HorizontalAlignment="Right" Margin="0,0,20,0" VerticalAlignment="Center"/>
                                <TextBox x:Name="TB_Telephone" Margin="0,0.27,0,-0.27" Style="{DynamicResource TextBoxStyle1}" Grid.Column="1" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Text="{Binding Customer.Address.Telephone}"/>
                            </Grid>
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Right" Margin="0,-52.133,50,0" Orientation="Horizontal" VerticalAlignment="Top">
                            <Button x:Name="BTN_Save" Cursor="Arrow" Style="{DynamicResource addTransfer}" VerticalAlignment="Center" FontFamily="{DynamicResource SystemFont}" FontSize="13.333" Foreground="White" Margin="15,0,0,0" Command="{Binding SaveCommand, Mode=OneWay}" CommandParameter="{Binding IsValidData, ElementName=userControl}" ToolTip="Save Information">
                            	<Image Margin="0,1.5,3,1.5" Source="/Microsoft.Samples.NLayerApp.Presentation.Windows.WPF.Client;Component/Images/FichaButton_Save.png" Stretch="Fill" Width="20" Height="20"/>
                            </Button>
                        </StackPanel>
                        <Grid Margin="0" Height="146.888" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="BTN_ChangePicture" Content="Change..." Style="{DynamicResource ChangePictureButtonStyle}" Foreground="#5FFFFFFF" FontFamily="{DynamicResource SystemFont}" Cursor="Hand" Margin="41.5,124.9,0,1" Command="{Binding AddPictureCommand, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="97"/>
                            <Image x:Name="IMG_CustomerImage" Source="{Binding Path=Photo, Converter={StaticResource imageConverter}}" Margin="39.443,25.944,0,20.944" HorizontalAlignment="Left" Stretch="Fill" Width="100" Height="100"/>
                        </Grid>
                    </Grid>
                </Grid>
                <Button x:Name="BTN_Close" HorizontalAlignment="Right" Margin="0,0,10,0" Content="" VerticalAlignment="Center" Style="{DynamicResource CloseCustomer}" Foreground="White" FontFamily="{DynamicResource SystemFont}" Height="20" Command="{Binding CloseCommand, Mode=OneWay}"/>
            </Grid>
        </Border>
    </Border>
</UserControl>